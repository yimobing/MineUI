/**
* MEUI前端框架
* Author:ChenMufeng
* Date: 2018.8.30
* Update:2020.06.22
*/

var meui = {
	/**
	* 显示转圈
	* @param str 转圈文字
	*/
	showAnimate:function(str){
		var txt = typeof(str)=='undefined' ? '' : (str=='' ? '' : str);
		var spanTxt = txt=='' ? '' : '<span class="txt">'+txt+'</span>';
		var _html='<div class="meui-loading">'+
					 '	<div class="meui-animate"><i class="icon icon-load"></i>'+spanTxt+'</div>'+ //edit 20180616-1
					 '</div>';
		if($('.meui-loading').length==0) $('body').append(_html);
	},
	
	/**
	* 销毁转圈
	*/
	destroyAnimate:function(){
		$('.meui-loading').remove();
	},
	
	/**
	* 创建遮罩
	* @param Id 遮罩ID
	*/
	openMask:function(Id){	
		var point = this.generateMaskNode();
		var node = typeof(Id)=='undefined' ? '#'+point : Id;
		var name = node.indexOf('#')>=0  ? node.replace('#','') : node;
		var _str = '<div class="'+point+'" id="'+name+'"></div>';
		if($(node).length==0) $('body').append(_str);
		var scrollHeight = document.body.scrollHeight; //整个网页高度(内容高度)
				//$(node).attr('style',"position:fixed;top:0;left:0;right:0;z-index:50;width:100%;height:100%;background-color:rgba(0,0,0,.35);background-color:#000;opacity:0.35;filter:Alpha(opcity=35);");
		//$('html,body').css({'height':scrollHeight,'overflow':'hidden'}); 
		$('html,body').attr('style','width:100%;height:'+scrollHeight+'px;overflow:hidden'); //禁止滚动(pc端)	 注意,若'height':'100%'则会闪屏
		if(this.checkIsMobile()){
			var dom = document.getElementById(node.toString().replace(/[\#\.]/g, ''));
			dom.addEventListener('touchmove', this.winScroll, {passive:false}); //禁止滚动（手机端,兼容chome手机模拟)
		}
		
		
		var zindex = 110, //遮罩基准z-index值(也可取css中的z-index值 110)
				count = $('.'+point).length, //遮罩数量统计
				m_zindex = zindex+ count; //当前遮罩z-index
		$('#'+name).css('z-index',m_zindex);
	},
	
	/**关闭遮罩*/
	closeMask:function(){
		var node = '#'+this.generateMaskNode();
		if($(node).length>0) $(node).fadeOut('fast').remove();
		$('html,body').removeAttr('style'); //解除禁止滚动(pc端)
		if(this.checkIsMobile()){
			$('html,body').off('touchmove,touchstart'); //解除禁止滚动(手机端)1//$(window).off('touchmove,touchstart');
			window.removeEventListener('touchmove', this.winScroll, {passive:false}); 	//解除禁止滚动(手机端)2(解除window绑定的touchmove事件)
		}
	},


	/**
	 * 打开iframe窗口
	 * @param {object} opt json格式的参数对象
	 * edit 20200609-1
	 */
	openIframe:function(opt){
		var $this = this;
		var defaults = {
			url: '', //链接地址
			caption: '', //窗口标题(可缺省)
			top: '2.5%', //窗口距离顶部的距离(可缺省)（数字或百分比，eg.25%)
			width: '98%', //窗口宽度(可缺省)（数字或百分比，eg1.1200, eg2.98%）
			titleHeight:45, //标题栏高度(可缺省)
			titleFontSize:'', //标题文字大小(可缺省), 默认18px
			showCross: true, //是否显示右上角打叉图标(可缺省), 默认true
			crossDirection: 'right', // 打叉图标位置(可选). left 左上角, right 右上角(默认)
			buttons: [], //操作按钮(可缺省). eg.['下一步', '取消']
			btnBgColor: [], //自定义按钮背景色(可缺省). 英文单词或颜色值. eg. ['#04BE02','#888']
			btnDirection: 'horizontal', //按钮方向(可缺省).水平|horizontal(默认),垂直|vertical
			btnClickClose: false, //是否一点击按钮就关闭窗口(可缺省),默认false
			btnCallBack: function(ret){ //按钮点击回调函数(可缺省). ret 为按钮索引值+1
				//this.closeFrame(); //关闭本窗口(closeFrame是内置函数)
			}, 
			params: { //自定义其它参数(可缺省)
				frameId: 'meui-frame-id-' + Math.random().toString(36).substr(2), //ifame的ID属性(可缺省)
				frameName: 'meui-frame-name', //iframe的Name属性(可缺省)
				frameZindex: 51, //iframe层级z-index(可缺省)
				frameRadius: true,  //iframe四个角是否圆角(可缺省),默认true
				frameBorder: true, //iframe是否有边框(可缺省),默认true
				maskId: 'meui-frame-mask', //遮罩id(可缺省)
				maskZindex: 50, //遮罩层级z-index(可缺省)
				animation:{ //iframe打开时是否启用动画效果(可缺省)
					enable: false, //默认false不开启(可缺省)
					direction: 'left' //动画方向(可缺省). left 向左(默认), top 向上
				}
			}, 
			closeCallBack: function(){}, //关闭时的回调函数(可缺省)
			closeFrame: function(){  //关闭窗口, 供btnCallBack等回调函数调用,用来关闭窗口(可缺省)
				closeMinyIframe();
			}
		}

		var settings = $.extend(true,{},defaults,opt||{});
		var ps_url = settings.url,
			ps_title = settings.caption,
			ps_cross = settings.showCross,
			ps_crossDirection = settings.crossDirection == '' ? ' right' : settings.crossDirection,
			ps_top = settings.top,
			ps_width = settings.width,
			ps_height = 100 - 2 * settings.top.replace(/[\%]/g,'') + '%',
			ps_titleH = parseInt(settings.titleHeight),
			ps_titleFontSize = settings.titleFontSize,
			ps_buttons = settings.buttons,
			ps_btnDirection = settings.btnDirection,
			ps_btnBgColor = settings.btnBgColor,
			ps_params = settings.params;
			
		if(ps_url!=''&&typeof(ps_url)!='undefined'){
			var winH = $(window).height();
			//var outerH = winH - ps_top.replace(/[\%]/g,'') / 100 *  winH- 55;
			//var outerH = winH * (ps_height.replace(/[\%]/g,'') / 100) - ps_titleH - 10,
			var outerH = winH * (ps_height.replace(/[\%]/g,'') / 100),
				title = typeof ps_title == 'undefined' ? '' : ps_title,
				tfontsize = typeof ps_titleFontSize == 'undefined' ? '' : ps_titleFontSize.toString().replace(/px/g, '') + 'px',
				showCross = typeof ps_cross == 'undefined' ? true : ps_cross == false ? false : true,
				btns = typeof ps_buttons == 'undefined' ? '' : ps_buttons,
				btnDirection = typeof ps_btnDirection == 'undefined' ? '' : ps_btnDirection,
				btnBgColor = typeof ps_btnBgColor == 'undefined' ? '' : ps_btnBgColor,
				top = ps_top,
				width = ps_width.indexOf('%') >= 0 ? ps_width : ps_width + 'px',
				left = right = (100 - width.replace(/[\%]/g,'')) / 2,
				height = ps_height,
				titleH = ps_titleH,
				params3 = typeof(ps_params)=='undefined' ? '' : ps_params; //第3个参数，遮罩参数（eg.遮罩id,层级z-index)
			var frameZindex = params3 =='' ? '' : params3.frameZindex,
				frameId = params3 == '' ? defaults.params.frameId : params3.frameId.toString().replace(/[\.\#]/g, ''),
				frameName = params3 == '' ? defaults.params.frameName : params3.frameName,
				frameBorder = params3 == '' ? true : params3.frameBorder === false ? false : true, //默认true
				frameRadius = params3 == '' ? true : params3.frameRadius === false ? false : true, //默认true
				maskId = params3 == '' ? '' : params3.maskId,
				maskZindex = params3 == '' ? '' : params3.maskZindex,
				animation = params3 == '' ? '' : params3.animation;
			var animateEnabled  = animation == '' ? false : animation.enable === true ? true : false,
				animateDirection = animation == '' ? 'left' : animation.direction;

			var parentNode = 'meui-frame-window';
			var _crossClassName = ' ' + ps_crossDirection;
			var _crossStr = !showCross ? '' : '<div class="iframe-close' + _crossClassName + '"><i class="icon icon-close"></i></div>';
			var _fontSizeStyle = tfontsize == '' ? '' : ' font-size:' + tfontsize;
			var _titleStr = title == '' ? '' : 	'<div class="iframe-title" style="height:' + titleH + 'px;line-height:' + titleH + 'px;' + _fontSizeStyle + '">' + title + '</div>';
			var _btnHtml = '';
			if(Object.prototype.toString.call(btns) == "[object Array]"){ //是数组时
				for(var i = 0; i < btns.length; i++){
					var j = i + 1;
					var _bgStyle = typeof btnBgColor[i] == 'undefined' || btnBgColor == null ? '' : ' style="background-color:' + btnBgColor[i] + '"';
					_btnHtml += '<button type="button" class="frame-btn frame-btn-' + j + '"' + _bgStyle + '>' + btns[i] + '</button>';
				}
			}
			var _btnStr = btns == '' ? '' : '<div class="iframe-operation ' + btnDirection + '">' + _btnHtml + '</div>';

			var _topStr = _titleStr == '' && _btnStr == '' ? '' : '<div class="iframe-info">' + _titleStr + _btnStr + '</div>';
			var _html = '<div id="' + parentNode + '" style="top:' + top + ';width:' + width + ';height:' + height + '">'+
									_crossStr +
									_topStr +
									'	<div class="iframe-content" style="height:' + outerH + 'px">'+
									'		<iframe class="meui-iframe" id="' + frameId + '" name="' + frameName + '" src="'+ps_url+'"></iframe>'+
									'	</div>'+
									'</div>';
			$('body').append(_html).animate({}, function(){
				var $parentDom = $('#' + parentNode);
				createMinyMask(maskId,maskZindex);
				var infoH = $parentDom.find('.iframe-info').outerHeight(true);
				$parentDom.find('.iframe-content').css({
					height: outerH - infoH
				})
				
				// ios bug： 解决部分设备中iframe的宽、高被子页面内容撑开，导致子页面中fixed类型的元素无法固定在底部或左右两侧的问题
				if(/iphone|ipod|mac|ipad/i.test(navigator.userAgent.toLocaleLowerCase())){
					var frameLoaded = function(){
						$('#' + frameId).contents().find('html').css({
							position: 'relative',
						    width: '100%',
						    height: '100%',
						    overflow: 'hidden'
						})
						$('#' + frameId).contents().find('body').css({
							position: 'fixed',
						    top: 0,
						    left: 0,
						    width: '100%',
						    height: '100%',
							overflowY: 'auto',
							'-webkit-overflow-scrolling': 'touch'
							//border: '5px solid green',
						})

					}
					if(document.domain != ''){ // 在web目录中打开时
						//IFRAME加载完成时
						var domFrame = document.getElementById(frameId);
						if (domFrame.attachEvent){
							domFrame.attachEvent("onload", function(){
								frameLoaded();
							});
						} else {
							domFrame.onload = function(){
								frameLoaded();
							}
						}
					}
				}

				if(frameZindex!='') $parentDom.css('z-index',frameZindex); 
				if(!frameBorder) $parentDom.addClass('no-border');
				if(!frameRadius) $parentDom.addClass('no-radius');
				if(animateEnabled)  $parentDom.addClass('animation-' + animateDirection);
				/*//给iframe子页面添加关闭按钮
				var closeHtml = '<div class="iframe-close iframe-close-son"><i class="icon icon-close"></i></div>';
				var iframe = document.getElementById(frameId);
				if(iframe.attachEvent){
					iframe.attachEvent("onload", function(){
						$('#' + frameId).contents().find('body').prepend(closeHtml);
					})
				}else{
					iframe.onload = function(){
						$('#' + frameId).contents().find('body').prepend(closeHtml);
					}
				}*/
				//关闭iframe
				$(document).off('click', '.iframe-close').on('click','.iframe-close',function(){
					closeMinyIframe();
					if(settings.closeCallBack) settings.closeCallBack();
				})
				$(document).off('click', '.frame-btn').on('click', '.frame-btn', function(){
					if(settings.btnClickClose) closeMinyIframe();
					var index = $(this).index() + 1;
					if(settings.btnCallBack) settings.btnCallBack(index);
				})
			})

			
		}



		/*
		* 子函数：创建遮罩
		* @param ps_maskId 遮罩的id,eg. '#mask1'
		* @param ps_maskId 遮罩的z-index
		* edit 20200609-1
		*/
		function createMinyMask(ps_maskId, ps_maskZIndex){
			var node = typeof(ps_maskId)=='undefined' || ps_maskId=='' ? '#meui-frame-mask' : '#' + ps_maskId.toString().replace(/\#/g, '');
			var zindex = typeof(ps_maskZIndex)=='undefined' || ps_maskZIndex=='' ? 50 : ps_maskZIndex;
			var hideMaskId = node.toString().replace('#','').replace('.','');
			var _maskHideStr = '<input type="hidden" id="maskFlag" value="'+hideMaskId+'">';
			if($('#maskFlag').length==0) $('body').append(_maskHideStr);
			else $('#maskFlag').val(hideMaskId);	
			var id = node.indexOf('#')>=0  ? node.toString().replace('#','') : node;
			var _str = '<div id="'+id+'"></div>';
			//alert('len:'+$(node).length)
			if($(node).length==0) $('body').append(_str);
			var scrollHeight = document.body.scrollHeight; //整个网页高度(内容高度)
			$(node).attr('style',"position:fixed;top:0;left:0;right:0;z-index:"+zindex+";width:100%;height:100%;background-color:rgba(0,0,0,0.3);background-color:#000;opacity:0.3;filter:Alpha(opcity=30);filter:progid:DXImageTransform.Microsoft.Alpha(opacity=30);");
			//$('html,body').css({'height':scrollHeight,'overflow':'hidden'}); 
			$('html,body').attr('style','width:100%;height:'+scrollHeight+'px;overflow:hidden'); //禁止滚动(pc端)	 注意,若'height':'100%'则会闪屏
			if(checkMinyIsMobile()){
				var dom = document.getElementById(node.toString().replace(/[\#\.]/g, ''));
				dom.addEventListener('touchmove', this.winScroll, {passive:false}); //禁止滚动（手机端,兼容chome手机模拟)
			}
		}
		

		function checkMinyIsMobile(){ //子函数：检测是否手机端,如果是，返回true
			var userAgentInfo = navigator.userAgent.toLowerCase();
			//console.log(userAgentInfo);
			var Agents = ["mobile","android","iphone","sysbian","windows phone","iPad","ipod","blackberry"];
			var flag = false;
			for(var i=0; i<Agents.length; i++){
				if(userAgentInfo.indexOf(Agents[i])>=0){
					flag = true;
					break;
				}
			}
			return flag;
		}
		
		/**
		 * 子函数：关闭iframe窗口
		 */
		function closeMinyIframe(){
			var value = $('#maskFlag').val();
			var iframeId = value=='' ? '' : '#'+value;
			var node = '#meui-frame-window';
			$(node).fadeOut('fast','linear');
			var maskId = $('#maskFlag').val();
			$('#' + maskId).remove();
			$('html,body').removeAttr('style');
			setTimeout(function(){
				$(node).remove();
			},20)
		}
	},

	
	/**生成随机字符串(数字+字母组成)*/
	generateRandChar:function(){
		var str = Math.random().toString(36).substr(2);
		return str;
	},
	
	/**生成遮罩节点*/
	generateMaskNode:function(){
		var str = 'meui_mask'; //请不要添加井号#或者点号.
		return str;
	},
	
	/**检测是否手机端,如果是，返回true*/
	checkIsMobile:function(){ 
		var userAgentInfo = navigator.userAgent.toLowerCase();
		//console.log(userAgentInfo);
		var Agents = ["mobile","android","iphone","sysbian","windows phone","iPad","ipod","blackberry"];
		var flag = false;
		for(var i=0; i<Agents.length; i++){
			if(userAgentInfo.indexOf(Agents[i])>=0){
				flag = true;
				break;
			}
		}
		return flag;
	},

	/**禁止滚动(手机端)公用函数(touchemove中添加event.preventDefault()后会阻止浏览器默认的滚动)*/
	winScroll:function(event){ 
		event.preventDefault();
	},


	/**
	 * 导出excel功能
	 * 将数据导出excel
	*/
	export2Excel:function(opt){
		var defaults = {
			enable: true, //是否启用(可缺省).默认true
			filename:'导出报表-', //文件名（可缺省）.系统默认的excel文件名为：'Excel Document Nam
			fileAutoTime:true, //导出的文件自动添加时间(hh:mm:ss)作为文件名的一部分。默认true
			extension: '.xls' //拓展名。 .xls(excel 2003)(默认), .xlsx (excel 2007,2010)
		}
		var settings = $.extend(true,defaults,opt||{});
		var tableRootNode = '.meui-table';
		if($(tableRootNode).length==0){
			this.alertDialog('表格根节点 '+tableRootNode+' 不存在，请检查');
			return;
		}
		if(!settings.enable){
			this.alertDialog('您已禁用导出EXCEL功能，请先启用');
			return;
		}	
		if(navigator.appName == "Microsoft Internet Explorer" && parseInt(navigator.appVersion.split(";")[1].replace(/[ ]/g, "").replace("MSIE",""))<11){
			this.alertDialog('导出EXCEL功能暂不支持IE11以下版本的浏览器\n请使用360(极速模式)、火狐（Firefox）、谷歌（Chrome）等高级浏览器！');
			return;
		}
		var flag = false;
		if(typeof($('.btn-excel').table2excel)=='function') flag = true;
		
		if(!flag){
			this.alertDialog('请引入jquery.table2excel.min.js才能使用导出功能');
		}else{
			var mydate = new Date(),
					year = mydate.getFullYear(),
					month = mydate.getMonth()+1;
					day = mydate.getDate(),
					hour = mydate.getHours(),
					minute = mydate.getMinutes(),
					seconds = mydate.getSeconds();
			if(month<10) month = '0'+month;
			if(day<10) day = '0'+day;
			if(hour<10) hour = '0'+hour;
			if(minute<10) minute = '0'+minute;
			if(seconds<10) seconds = '0'+seconds;
			var today = year+''+month+''+day+''+hour+''+minute+''+seconds;
			
			var $filename = typeof settings.filename == 'undefined' ? '导出报表-' : (settings.filename == '' ? '导出报表-' : settings.filename),
					$fileAutoTime = typeof settings.fileAutoTime == 'undefined' ? true : settings.fileAutoTime,
					$fileext = typeof settings.extension == 'undefined' ? '.xls' : (settings.extension =='' ? '.xls' : settings.extension);
			if($fileAutoTime) $filename += today;
			
			var $fileext = ".xls"; //导出的excel文件拓展名
			if(navigator.userAgent.toLocaleLowerCase().indexOf('firefox')>-1){ //火狐浏览器时要带后缀
				$filename = $filename + $fileext;
			}
			
			$(tableRootNode).table2excel({
				exclude: ".noExl", //不要导出的行
				name: "Excel Document Name", //导出的excel文档名称,默认Excel Document Name
				filename: $filename, //excel文件名
				fileext: $fileext, //文件后辍名
				exclude_img: true, //是否排除导出图片 (exclude 表示不包括)
				exclude_links: true, //是否排除导出超链接 (exclude 表示不包括)
				exclude_inputs: true //是否排除导出输入框中的内容 (exclude 表示不包括)
			})
			
		}
	},


	/**
	* 弹出窗口提示信息
	*/
	alertDialog:function(tips){
		if(typeof meuiDialog!='undefined'){
			meuiDialog.alert({
				caption: '提示',
				message: tips,
				buttons: ['确定']
			})
		}else{
			alert(tips);
		}
	}
	
	
};